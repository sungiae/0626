/*
 * 메서드란?
 * - 문장들을 묶어 놓은 것 = {  }
 * - 작업단위로 문장들을 묶어서 이름 붙인 것
 * - 하나의 작업을 이름을 붙여 { }안에 넣은 것 ==> 코드 중복 제거
 * 
 * 메서드 상세설명
 * 1. 문장들 묶은 것 (작업 단위 별로)
 * 2. 값(입력)을 받아서 처리하고, 결과를 반환(출력)
 * 
 * 메서드 = 객체지향개념에서 함수를 지칭하는 말
 * 메서드는 클래스 안에 반드시 있어야함
 * 함수는 클래스와 별도로 존재 가능
 * 
 * 메서드와 함수는 근본적으로 거의 같다
 * 
 * 메서드의 장점 - 중복코드제거, 관리용이(수정 시 한번만 고치면 된다), 재사용가능
 * 1. 코드의 중복 줄일 수 있다
 * 2. 코드의 관리가 쉽다
 * 3. 코드를 재사용할 수 있다
 * 4. 코드가 간결해서 이해하기 쉬워진다
 * 
 * 메서드의 작성
 * 1. 반복적으로 수행되는 여러 문장을 메서드로 작성
 * 2. 하나의 메서드는 한 가지 기능만 수행하도록 작성
 * 
 * 메서드 = 선언부 + 구현부
 * 반환타입 메서드이름 (타입 변수명, 타입 변수명...) ==> 선언부 / 입력 : 0~n개 가능
 * { 메서드 호출시 수행될 코드 } ==> 구현부
 * 
 */
public class a7_메서드 {
	int      add        (int x, int y) {
//  반환타입   메서드이름    매개변수 입력
//  (출력)
		int result = x+y;
		
		return result; // 결과를 반환
//		x,y,result 모두 메서드 내에서 호출 되었으므로 지역변수 
//		메서드 내에서만 유지하므로 다른 메서드의 지역변수와 이름이 같아도 상관 없다
	}
	public static void main(String[] args) {
		// TODO Auto-generated method stub

	}

}
